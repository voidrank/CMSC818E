// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chunk.proto

package pbc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Time struct {
	Sec                  int64    `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Nsec                 int32    `protobuf:"varint,2,opt,name=nsec,proto3" json:"nsec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Time) Reset()         { *m = Time{} }
func (m *Time) String() string { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()    {}
func (*Time) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{0}
}

func (m *Time) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Time.Unmarshal(m, b)
}
func (m *Time) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Time.Marshal(b, m, deterministic)
}
func (m *Time) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Time.Merge(m, src)
}
func (m *Time) XXX_Size() int {
	return xxx_messageInfo_Time.Size(m)
}
func (m *Time) XXX_DiscardUnknown() {
	xxx_messageInfo_Time.DiscardUnknown(m)
}

var xxx_messageInfo_Time proto.InternalMessageInfo

func (m *Time) GetSec() int64 {
	if m != nil {
		return m.Sec
	}
	return 0
}

func (m *Time) GetNsec() int32 {
	if m != nil {
		return m.Nsec
	}
	return 0
}

type Attrtype struct {
	Valid                int64    `protobuf:"varint,1,opt,name=Valid,proto3" json:"Valid,omitempty"`
	Inode                uint64   `protobuf:"varint,2,opt,name=Inode,proto3" json:"Inode,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	Blocks               uint64   `protobuf:"varint,4,opt,name=Blocks,proto3" json:"Blocks,omitempty"`
	Atime                uint64   `protobuf:"varint,5,opt,name=Atime,proto3" json:"Atime,omitempty"`
	Mtime                uint64   `protobuf:"varint,6,opt,name=Mtime,proto3" json:"Mtime,omitempty"`
	Ctime                uint64   `protobuf:"varint,7,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Crtime               uint64   `protobuf:"varint,8,opt,name=Crtime,proto3" json:"Crtime,omitempty"`
	FileMode             uint32   `protobuf:"varint,9,opt,name=FileMode,proto3" json:"FileMode,omitempty"`
	Nlink                uint32   `protobuf:"varint,10,opt,name=Nlink,proto3" json:"Nlink,omitempty"`
	Uid                  uint32   `protobuf:"varint,11,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Gid                  uint32   `protobuf:"varint,12,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Rdev                 uint32   `protobuf:"varint,13,opt,name=Rdev,proto3" json:"Rdev,omitempty"`
	Flags                uint32   `protobuf:"varint,14,opt,name=Flags,proto3" json:"Flags,omitempty"`
	BlockSize            uint32   `protobuf:"varint,15,opt,name=BlockSize,proto3" json:"BlockSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attrtype) Reset()         { *m = Attrtype{} }
func (m *Attrtype) String() string { return proto.CompactTextString(m) }
func (*Attrtype) ProtoMessage()    {}
func (*Attrtype) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{1}
}

func (m *Attrtype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attrtype.Unmarshal(m, b)
}
func (m *Attrtype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attrtype.Marshal(b, m, deterministic)
}
func (m *Attrtype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attrtype.Merge(m, src)
}
func (m *Attrtype) XXX_Size() int {
	return xxx_messageInfo_Attrtype.Size(m)
}
func (m *Attrtype) XXX_DiscardUnknown() {
	xxx_messageInfo_Attrtype.DiscardUnknown(m)
}

var xxx_messageInfo_Attrtype proto.InternalMessageInfo

func (m *Attrtype) GetValid() int64 {
	if m != nil {
		return m.Valid
	}
	return 0
}

func (m *Attrtype) GetInode() uint64 {
	if m != nil {
		return m.Inode
	}
	return 0
}

func (m *Attrtype) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Attrtype) GetBlocks() uint64 {
	if m != nil {
		return m.Blocks
	}
	return 0
}

func (m *Attrtype) GetAtime() uint64 {
	if m != nil {
		return m.Atime
	}
	return 0
}

func (m *Attrtype) GetMtime() uint64 {
	if m != nil {
		return m.Mtime
	}
	return 0
}

func (m *Attrtype) GetCtime() uint64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *Attrtype) GetCrtime() uint64 {
	if m != nil {
		return m.Crtime
	}
	return 0
}

func (m *Attrtype) GetFileMode() uint32 {
	if m != nil {
		return m.FileMode
	}
	return 0
}

func (m *Attrtype) GetNlink() uint32 {
	if m != nil {
		return m.Nlink
	}
	return 0
}

func (m *Attrtype) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *Attrtype) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *Attrtype) GetRdev() uint32 {
	if m != nil {
		return m.Rdev
	}
	return 0
}

func (m *Attrtype) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *Attrtype) GetBlockSize() uint32 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

type Node struct {
	Name                 string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Attrs                *Attrtype         `protobuf:"bytes,2,opt,name=Attrs,proto3" json:"Attrs,omitempty"`
	Version              uint64            `protobuf:"varint,3,opt,name=Version,proto3" json:"Version,omitempty"`
	PrevSig              string            `protobuf:"bytes,4,opt,name=PrevSig,proto3" json:"PrevSig,omitempty"`
	ChildSigs            map[string]string `protobuf:"bytes,5,rep,name=ChildSigs,proto3" json:"ChildSigs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DataBlocks           []string          `protobuf:"bytes,6,rep,name=DataBlocks,proto3" json:"DataBlocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{2}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetAttrs() *Attrtype {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *Node) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Node) GetPrevSig() string {
	if m != nil {
		return m.PrevSig
	}
	return ""
}

func (m *Node) GetChildSigs() map[string]string {
	if m != nil {
		return m.ChildSigs
	}
	return nil
}

func (m *Node) GetDataBlocks() []string {
	if m != nil {
		return m.DataBlocks
	}
	return nil
}

type Head struct {
	Root                 string   `protobuf:"bytes,1,opt,name=Root,proto3" json:"Root,omitempty"`
	NextInd              uint64   `protobuf:"varint,2,opt,name=NextInd,proto3" json:"NextInd,omitempty"`
	Replica              uint64   `protobuf:"varint,3,opt,name=Replica,proto3" json:"Replica,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Head) Reset()         { *m = Head{} }
func (m *Head) String() string { return proto.CompactTextString(m) }
func (*Head) ProtoMessage()    {}
func (*Head) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{3}
}

func (m *Head) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Head.Unmarshal(m, b)
}
func (m *Head) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Head.Marshal(b, m, deterministic)
}
func (m *Head) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Head.Merge(m, src)
}
func (m *Head) XXX_Size() int {
	return xxx_messageInfo_Head.Size(m)
}
func (m *Head) XXX_DiscardUnknown() {
	xxx_messageInfo_Head.DiscardUnknown(m)
}

var xxx_messageInfo_Head proto.InternalMessageInfo

func (m *Head) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *Head) GetNextInd() uint64 {
	if m != nil {
		return m.NextInd
	}
	return 0
}

func (m *Head) GetReplica() uint64 {
	if m != nil {
		return m.Replica
	}
	return 0
}

type ChunkPutRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkPutRequest) Reset()         { *m = ChunkPutRequest{} }
func (m *ChunkPutRequest) String() string { return proto.CompactTextString(m) }
func (*ChunkPutRequest) ProtoMessage()    {}
func (*ChunkPutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{4}
}

func (m *ChunkPutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkPutRequest.Unmarshal(m, b)
}
func (m *ChunkPutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkPutRequest.Marshal(b, m, deterministic)
}
func (m *ChunkPutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkPutRequest.Merge(m, src)
}
func (m *ChunkPutRequest) XXX_Size() int {
	return xxx_messageInfo_ChunkPutRequest.Size(m)
}
func (m *ChunkPutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkPutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkPutRequest proto.InternalMessageInfo

func (m *ChunkPutRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ChunkPutRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ChunkPutReply struct {
	ErrorString          string   `protobuf:"bytes,1,opt,name=ErrorString,proto3" json:"ErrorString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkPutReply) Reset()         { *m = ChunkPutReply{} }
func (m *ChunkPutReply) String() string { return proto.CompactTextString(m) }
func (*ChunkPutReply) ProtoMessage()    {}
func (*ChunkPutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{5}
}

func (m *ChunkPutReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkPutReply.Unmarshal(m, b)
}
func (m *ChunkPutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkPutReply.Marshal(b, m, deterministic)
}
func (m *ChunkPutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkPutReply.Merge(m, src)
}
func (m *ChunkPutReply) XXX_Size() int {
	return xxx_messageInfo_ChunkPutReply.Size(m)
}
func (m *ChunkPutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkPutReply.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkPutReply proto.InternalMessageInfo

func (m *ChunkPutReply) GetErrorString() string {
	if m != nil {
		return m.ErrorString
	}
	return ""
}

type ChunkGetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkGetRequest) Reset()         { *m = ChunkGetRequest{} }
func (m *ChunkGetRequest) String() string { return proto.CompactTextString(m) }
func (*ChunkGetRequest) ProtoMessage()    {}
func (*ChunkGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{6}
}

func (m *ChunkGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkGetRequest.Unmarshal(m, b)
}
func (m *ChunkGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkGetRequest.Marshal(b, m, deterministic)
}
func (m *ChunkGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkGetRequest.Merge(m, src)
}
func (m *ChunkGetRequest) XXX_Size() int {
	return xxx_messageInfo_ChunkGetRequest.Size(m)
}
func (m *ChunkGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkGetRequest proto.InternalMessageInfo

func (m *ChunkGetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ChunkGetReply struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkGetReply) Reset()         { *m = ChunkGetReply{} }
func (m *ChunkGetReply) String() string { return proto.CompactTextString(m) }
func (*ChunkGetReply) ProtoMessage()    {}
func (*ChunkGetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{7}
}

func (m *ChunkGetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkGetReply.Unmarshal(m, b)
}
func (m *ChunkGetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkGetReply.Marshal(b, m, deterministic)
}
func (m *ChunkGetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkGetReply.Merge(m, src)
}
func (m *ChunkGetReply) XXX_Size() int {
	return xxx_messageInfo_ChunkGetReply.Size(m)
}
func (m *ChunkGetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkGetReply.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkGetReply proto.InternalMessageInfo

func (m *ChunkGetReply) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ChunkGetReply) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ChunkListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkListRequest) Reset()         { *m = ChunkListRequest{} }
func (m *ChunkListRequest) String() string { return proto.CompactTextString(m) }
func (*ChunkListRequest) ProtoMessage()    {}
func (*ChunkListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{8}
}

func (m *ChunkListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkListRequest.Unmarshal(m, b)
}
func (m *ChunkListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkListRequest.Marshal(b, m, deterministic)
}
func (m *ChunkListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkListRequest.Merge(m, src)
}
func (m *ChunkListRequest) XXX_Size() int {
	return xxx_messageInfo_ChunkListRequest.Size(m)
}
func (m *ChunkListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkListRequest proto.InternalMessageInfo

type ChunkListReply struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=Keys,proto3" json:"Keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkListReply) Reset()         { *m = ChunkListReply{} }
func (m *ChunkListReply) String() string { return proto.CompactTextString(m) }
func (*ChunkListReply) ProtoMessage()    {}
func (*ChunkListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c46bd41e8571bd, []int{9}
}

func (m *ChunkListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkListReply.Unmarshal(m, b)
}
func (m *ChunkListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkListReply.Marshal(b, m, deterministic)
}
func (m *ChunkListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkListReply.Merge(m, src)
}
func (m *ChunkListReply) XXX_Size() int {
	return xxx_messageInfo_ChunkListReply.Size(m)
}
func (m *ChunkListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkListReply.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkListReply proto.InternalMessageInfo

func (m *ChunkListReply) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*Time)(nil), "pbc.Time")
	proto.RegisterType((*Attrtype)(nil), "pbc.Attrtype")
	proto.RegisterType((*Node)(nil), "pbc.Node")
	proto.RegisterMapType((map[string]string)(nil), "pbc.Node.ChildSigsEntry")
	proto.RegisterType((*Head)(nil), "pbc.Head")
	proto.RegisterType((*ChunkPutRequest)(nil), "pbc.ChunkPutRequest")
	proto.RegisterType((*ChunkPutReply)(nil), "pbc.ChunkPutReply")
	proto.RegisterType((*ChunkGetRequest)(nil), "pbc.ChunkGetRequest")
	proto.RegisterType((*ChunkGetReply)(nil), "pbc.ChunkGetReply")
	proto.RegisterType((*ChunkListRequest)(nil), "pbc.ChunkListRequest")
	proto.RegisterType((*ChunkListReply)(nil), "pbc.ChunkListReply")
}

func init() { proto.RegisterFile("chunk.proto", fileDescriptor_67c46bd41e8571bd) }

var fileDescriptor_67c46bd41e8571bd = []byte{
	// 596 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x63, 0x27, 0xad, 0x27, 0x4d, 0x5b, 0x2d, 0x05, 0xad, 0x22, 0x84, 0x2c, 0x97, 0x43,
	0x0e, 0x28, 0x52, 0x0b, 0xe2, 0x4b, 0x5c, 0x4a, 0x68, 0x43, 0x55, 0x1a, 0x55, 0x1b, 0xe8, 0xdd,
	0xb5, 0x57, 0xe9, 0x2a, 0xae, 0x6d, 0xec, 0x4d, 0x84, 0xf9, 0x07, 0xfc, 0x0e, 0xfe, 0x15, 0xbf,
	0x06, 0xcd, 0xac, 0x1d, 0xa7, 0x91, 0x90, 0xb8, 0xcd, 0x7b, 0xb3, 0xf3, 0xfc, 0xe6, 0xed, 0xca,
	0xd0, 0x0d, 0xef, 0x16, 0xc9, 0x7c, 0x98, 0xe5, 0xa9, 0x4e, 0x99, 0x9d, 0xdd, 0x86, 0xfe, 0x0b,
	0x70, 0xbe, 0xaa, 0x7b, 0xc9, 0x0e, 0xc0, 0x2e, 0x64, 0xc8, 0x2d, 0xcf, 0x1a, 0xd8, 0x02, 0x4b,
	0xc6, 0xc0, 0x49, 0x90, 0x6a, 0x79, 0xd6, 0xa0, 0x2d, 0xa8, 0xf6, 0xff, 0xb4, 0x60, 0xe7, 0x54,
	0xeb, 0x5c, 0x97, 0x99, 0x64, 0x87, 0xd0, 0xbe, 0x09, 0x62, 0x15, 0x55, 0x43, 0x06, 0x20, 0x7b,
	0x91, 0xa4, 0x91, 0xa4, 0x39, 0x47, 0x18, 0x80, 0x62, 0x53, 0xf5, 0x53, 0x72, 0x9b, 0x48, 0xaa,
	0xd9, 0x13, 0xe8, 0x7c, 0x8c, 0xd3, 0x70, 0x5e, 0x70, 0x87, 0xd8, 0x0a, 0xa1, 0xc2, 0xa9, 0x56,
	0xf7, 0x92, 0xb7, 0x8d, 0x02, 0x01, 0x64, 0xaf, 0x88, 0xed, 0x18, 0xf6, 0xaa, 0x66, 0x47, 0xc4,
	0x6e, 0x1b, 0x96, 0x00, 0x2a, 0x8f, 0x72, 0xa2, 0x77, 0x8c, 0xb2, 0x41, 0xac, 0x0f, 0x3b, 0xe7,
	0x2a, 0x96, 0x57, 0x68, 0xcf, 0xf5, 0xac, 0x41, 0x4f, 0xac, 0x30, 0x2a, 0x4d, 0x62, 0x95, 0xcc,
	0x39, 0x50, 0xc3, 0x00, 0x8c, 0xe5, 0x9b, 0x8a, 0x78, 0x97, 0x38, 0x2c, 0x91, 0x19, 0xab, 0x88,
	0xef, 0x1a, 0x66, 0xac, 0x22, 0xdc, 0x4d, 0x44, 0x72, 0xc9, 0x7b, 0x44, 0x51, 0x8d, 0x6a, 0xe7,
	0x71, 0x30, 0x2b, 0xf8, 0x9e, 0x51, 0x23, 0xc0, 0x9e, 0x82, 0x4b, 0x3b, 0x52, 0x14, 0xfb, 0xd4,
	0x69, 0x08, 0xff, 0x57, 0x0b, 0x9c, 0x49, 0x15, 0xd6, 0x24, 0xb8, 0x97, 0x94, 0xab, 0x2b, 0xa8,
	0x66, 0x47, 0x18, 0x8a, 0xce, 0x0b, 0x8a, 0xb5, 0x7b, 0xd2, 0x1b, 0x66, 0xb7, 0xe1, 0xb0, 0xbe,
	0x0a, 0x61, 0x7a, 0x8c, 0xc3, 0xf6, 0x8d, 0xcc, 0x0b, 0x95, 0x26, 0x55, 0xd0, 0x35, 0xc4, 0xce,
	0x75, 0x2e, 0x97, 0x53, 0x35, 0xa3, 0xb0, 0x5d, 0x51, 0x43, 0xf6, 0x1a, 0xdc, 0xd1, 0x9d, 0x8a,
	0xa3, 0xa9, 0x9a, 0x15, 0xbc, 0xed, 0xd9, 0x83, 0xee, 0x09, 0x27, 0x71, 0xb4, 0x32, 0x5c, 0xb5,
	0xce, 0x12, 0x9d, 0x97, 0xa2, 0x39, 0xca, 0x9e, 0x01, 0x7c, 0x0a, 0x74, 0x50, 0xdd, 0x60, 0xc7,
	0xb3, 0x07, 0xae, 0x58, 0x63, 0xfa, 0x1f, 0x60, 0xef, 0xe1, 0x30, 0x26, 0x37, 0x97, 0x65, 0xb5,
	0x15, 0x96, 0x98, 0xd2, 0x32, 0x88, 0x17, 0xe6, 0xad, 0xb8, 0xc2, 0x80, 0xf7, 0xad, 0xb7, 0x96,
	0x3f, 0x01, 0xe7, 0xb3, 0x0c, 0x4c, 0xb6, 0x69, 0xaa, 0xeb, 0x28, 0xb0, 0xc6, 0x5d, 0x26, 0xf2,
	0x87, 0xbe, 0x48, 0xa2, 0xea, 0x8d, 0xd5, 0x10, 0x3b, 0x42, 0x66, 0xb1, 0x0a, 0x83, 0x7a, 0xff,
	0x0a, 0xfa, 0xef, 0x60, 0x7f, 0x84, 0x4f, 0xff, 0x7a, 0xa1, 0x85, 0xfc, 0xbe, 0x90, 0x85, 0x46,
	0x3b, 0x97, 0x8d, 0x9d, 0x4b, 0x63, 0xe7, 0x66, 0x65, 0x67, 0x57, 0x18, 0xe0, 0x1f, 0x43, 0xaf,
	0x19, 0xcd, 0xe2, 0x92, 0x79, 0xd0, 0x3d, 0xcb, 0xf3, 0x34, 0x9f, 0xea, 0x5c, 0x25, 0xb3, 0x4a,
	0x60, 0x9d, 0xf2, 0x8f, 0xaa, 0xaf, 0x8d, 0xe5, 0xbf, 0xbf, 0xe6, 0xbf, 0xa9, 0x74, 0xe9, 0x10,
	0xea, 0xfe, 0xaf, 0x21, 0x06, 0x07, 0x34, 0xf8, 0x45, 0x15, 0xb5, 0xbc, 0xff, 0x1c, 0xd3, 0x5e,
	0x71, 0xa8, 0xc6, 0xc0, 0xb9, 0x94, 0x65, 0xc1, 0x2d, 0xba, 0x19, 0xaa, 0x4f, 0x7e, 0x5b, 0xd0,
	0xa6, 0x63, 0xec, 0x18, 0xec, 0xeb, 0x85, 0x66, 0x87, 0x74, 0xd3, 0x1b, 0xc9, 0xf4, 0xd9, 0x06,
	0x9b, 0xc5, 0xa5, 0xbf, 0x85, 0x23, 0x63, 0xf9, 0x60, 0xa4, 0x59, 0x6f, 0x7d, 0xa4, 0xde, 0xc7,
	0xdf, 0x62, 0xaf, 0xc0, 0x41, 0x43, 0xec, 0x71, 0xd3, 0x5d, 0x33, 0xdd, 0x7f, 0xb4, 0x49, 0xd3,
	0xd4, 0x6d, 0x87, 0x7e, 0x4f, 0x2f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x7e, 0x7e, 0x89,
	0xad, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChunkClient is the client API for Chunk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChunkClient interface {
	Put(ctx context.Context, in *ChunkPutRequest, opts ...grpc.CallOption) (*ChunkPutReply, error)
	Get(ctx context.Context, in *ChunkGetRequest, opts ...grpc.CallOption) (*ChunkGetReply, error)
	List(ctx context.Context, in *ChunkListRequest, opts ...grpc.CallOption) (*ChunkListReply, error)
}

type chunkClient struct {
	cc *grpc.ClientConn
}

func NewChunkClient(cc *grpc.ClientConn) ChunkClient {
	return &chunkClient{cc}
}

func (c *chunkClient) Put(ctx context.Context, in *ChunkPutRequest, opts ...grpc.CallOption) (*ChunkPutReply, error) {
	out := new(ChunkPutReply)
	err := c.cc.Invoke(ctx, "/pbc.Chunk/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkClient) Get(ctx context.Context, in *ChunkGetRequest, opts ...grpc.CallOption) (*ChunkGetReply, error) {
	out := new(ChunkGetReply)
	err := c.cc.Invoke(ctx, "/pbc.Chunk/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chunkClient) List(ctx context.Context, in *ChunkListRequest, opts ...grpc.CallOption) (*ChunkListReply, error) {
	out := new(ChunkListReply)
	err := c.cc.Invoke(ctx, "/pbc.Chunk/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChunkServer is the server API for Chunk service.
type ChunkServer interface {
	Put(context.Context, *ChunkPutRequest) (*ChunkPutReply, error)
	Get(context.Context, *ChunkGetRequest) (*ChunkGetReply, error)
	List(context.Context, *ChunkListRequest) (*ChunkListReply, error)
}

func RegisterChunkServer(s *grpc.Server, srv ChunkServer) {
	s.RegisterService(&_Chunk_serviceDesc, srv)
}

func _Chunk_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChunkPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbc.Chunk/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkServer).Put(ctx, req.(*ChunkPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chunk_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChunkGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbc.Chunk/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkServer).Get(ctx, req.(*ChunkGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chunk_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChunkListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChunkServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbc.Chunk/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChunkServer).List(ctx, req.(*ChunkListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chunk_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbc.Chunk",
	HandlerType: (*ChunkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Chunk_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Chunk_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Chunk_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chunk.proto",
}
